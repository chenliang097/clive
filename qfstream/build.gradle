apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

configurations {
    all {
        resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'com.squareup.okhttp3' &&
                        details.requested.name ==
                        'okhttp') {
                    // OkHttp drops support before 5.0 since 3.13.0
                    details.useVersion '3.10.0'
                }
            }
        }
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {

        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    sourceSets {
        main {

            res.srcDirs = ['src/main/res']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
        warning 'InvalidPackage'
        disable 'InvalidPackage'
    }

    compileOptions {
        targetCompatibility rootProject.ext.target_compatibility
        sourceCompatibility  rootProject.ext.source_compatibility
    }

    viewBinding {
        enabled = true
    }

    buildFeatures {
        dataBinding = true
        // compose  true
    }

    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }

    sourceSets {
        main {

            res.srcDirs = ['src/main/res',
                           'src/main/crtres',
                           'src/main/crtgift',
                           'src/main/crtcommon',
                           'src/main/crtpay',
                           'src/main/crtmatisse',
                           'src/main/crturop',
                           'src/main/crtutil',
                           'src/main/crtuikit',
            ]
        }
    }
}
dependencies {
    implementation fileTree(include: '*.jar', dir: '../libs')
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation(rootProject.ext.dependencies["com.alibaba:arouter-api"]) {
        exclude module: 'support-v4'
    }
    implementation files('libs/ZegoEffects.jar')
    annotationProcessor (rootProject.ext.dependencies["com.alibaba:arouter-compiler"]){
        exclude module: 'support-v4'
    }

    kapt(rootProject.ext.dependencies["com.alibaba:arouter-compiler"]) {
        exclude module: 'support-v4'
    }
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["smartrefreshlayout"]
    implementation(rootProject.ext.dependencies["barlibrary"]) {
        exclude module: 'appcompat-v7'
    }
    implementation rootProject.ext.dependencies["roundedimageview"]

    implementation rootProject.ext.dependencies["lifecycle-extensions"]

    implementation (rootProject.ext.dependencies["rxpermissions"]) {
        exclude module: 'support-fragment'
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["glide-transformations"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["exoplayer"]
    implementation rootProject.ext.dependencies["exoplayer-ui"]
    implementation rootProject.ext.dependencies["anko"]
    implementation rootProject.ext.dependencies["switchbutton"]

//    gift
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["viewpager2"]
    implementation rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["svgaplayer"]
    //daatbus
    implementation rootProject.ext.dependencies["gson"]

//    common
    implementation 'com.google.android.material:material:1.4.0'


    api rootProject.ext.dependencies["workManager"]

    implementation 'com.tencent.tav:libpag:4.0.5.79'

    //1. 云刷脸SDK
    implementation(name: 'WbCloudFaceLiveSdk-v5.3.0-dcfa6f5f', ext: 'aar')
    //2. 云common SDK
    implementation(name: 'WbCloudNormal-v5.1.7-2c93d01', ext: 'aar')
    implementation(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    //友盟分享
    api files('libs/open_sdk_3.5.14.3_rc26220c_lite.jar') //QQ官方依赖库
    api rootProject.ext.dependencies["umcommon"]
    api rootProject.ext.dependencies["umams"]
    api rootProject.ext.dependencies["umshare-core"]
    api rootProject.ext.dependencies["umshare-board"]
    api rootProject.ext.dependencies["umshare-wx"]
    api rootProject.ext.dependencies["weixin"]
    api rootProject.ext.dependencies["umshare-sina"]
    api rootProject.ext.dependencies["sina-share"]
    api rootProject.ext.dependencies["umshare-qq"]
//    pay
    //支付宝支付
    api 'com.alipay.sdk:alipaysdk-android:+@aar'
    api rootProject.ext.dependencies["zego"]
    api files('libs/ZegoEffects.jar')
    implementation 'it.sephiroth.android.library.imagezoom:library:1.0.4'
    implementation rootProject.ext.dependencies["android-gif-drawable"]
    implementation rootProject.ext.dependencies["exifinterface"]
    implementation rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["agentweb-webview"]
    api rootProject.ext.dependencies["oss"]

    implementation rootProject.ext.dependencies["gson-convert"]
    implementation rootProject.ext.dependencies["okhttp-logging-interceptor"]
    implementation rootProject.ext.dependencies["chuck"]
    implementation (rootProject.ext.dependencies["retrofit"]){
        exclude module: 'okhttp'
    }
    implementation rootProject.ext.dependencies["logger"]
    implementation rootProject.ext.dependencies["room"]
    annotationProcessor rootProject.ext.dependencies["room-compile"]
    implementation rootProject.ext.dependencies["androidx-lifecycle-livedata"]
    api rootProject.ext.dependencies["android-core-ktx"]
    api rootProject.ext.dependencies["android-fragment-ktx"]
    api rootProject.ext.dependencies["blankj-util"]
    api rootProject.ext.dependencies["liveEventBus"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    api rootProject.ext.dependencies["smartrefreshlayout-kernel"]
    api rootProject.ext.dependencies["smartrefreshlayout-classics"]
    api rootProject.ext.dependencies["smartrefreshlayout-material"]

    api rootProject.ext.dependencies["XPopup"]
    api 'com.kingja.loadsir:loadsir:1.3.8'
    api rootProject.ext.dependencies["glide-webpdecoder"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]

}

